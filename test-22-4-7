#include <stdio.h>


int main()
{
	int i = 0;
	while(i<99999)
	{
		printf("%d\n", i);
		i++;
	}

	return 0;
}



int main()
{
	while(1)
		printf("hh");
	return 0;
}



判断一个数是否为奇数
输出1-100之间的奇数
int main()
{
	int i = 1;
	while(i<=100)
	{
		if(i%2 == 1)
			printf("%d\n", i);
		i++;
	}
	return 0;
}



int main()
{
	int a = 10;
	int* p = &a;       //取地址 类型int*  指针名字p
	*p = 90;		   // * - 解引用操作符
	printf("%p\n", &a);//%p 打印地址
	printf("%p\n", p); 
	printf("a = %d\n", a);
	printf("%d\n", sizeof(p));//指针大小4个字节（32位）  64位机器8个字节
	return 0;
}



static修饰局部变量，局部变量生命周期变长；
static修饰全局变量，改变了变量的作用域，只能在自己的源文件内使用；

extern：声明外部函数


int main()
{
	int a = 230;
	int b = 90;
	int max = 0;
	max = (a > b ? a : b); //条件操作符（三目操作符） exp1？ exp2: exp3
	printf("max = %d\n", max);
	return 0;
}



int main()
{
	int a = 3;
	int b = 9;
	int c = a&b;
	printf ("c = %d\n", c);
	return 0;
}



int Max(int x, int y)
{
	if (x > y)
		return x;
			else
				return y;
}
int main()
{
	int num1 = 234;
	int num2 = 92;
	int max = 0;
	max = Max(num1, num2);
		printf("max = %d\n", max);
		return 0;
}



int main()
{
	int a = 3;
	int b = 5;
	int c = a|b;
	printf("%d\n", c);
	printf("%d\n", sizeof(int));
return 0;
}



int main()
{
	int arr[7] = {1,2,3,4,5,6,7};
	int i = 0;
	while (i<7)
	{
		printf("%d\n", arr[i]);
		i++;
	}
printf("%d\n",arr[6]);
return 0;
}



int main()
{
	int line = 0;
	printf("吃饭\n");
	while (line<8)
	{
		printf("吃一口: %d\n",line);
		line++;
	}
	printf("吃饱了\n");
return 0;
}



/*
int main()
{
	printf("%c\n",'\x61');


return 0;
}
*/



int main()
{
	char arr1[] = "abc";
	printf("%s\n", arr1);
	return 0;
}



int main()
{
	//int SEX = s;
	printf("%d\n", MALE);
	printf("%d\n", FEMALE);
	printf("%d\n", SECREAT);
		return 0;
}



选择和循环结构
int main()
{
	int ret = 0;
	int ch = 0;
	char password[20] = {0};
	printf("请输入密码:>");
	scanf("%s", password);
	while((ch=getchar()) != '\n')
	{
		;
	}
	//getchar();
	printf("请确认(Y/N):>");
	ret = getchar();
	if(ret == 'Y')
	{
		printf("确认成功\n");
	}
	else
	{
		printf("确认失败\n");
	}
	return 0;
}


int main()
{
	int i = 0;
	int j = 0;
	for(; i<10; i++)
	{
		for(j = 0; j<10; j++)	//有j=0打印100次，省略j=0打印十次
		{
			printf("haha\n");
		}
	}
	return 0;
}





计算n的阶乘  n!
int main()
{
	int i = 0;
	int n = 0;
	int a = 1;
	scanf("%d", &n);
		for(i=1;i <= n;i++)
		{
			a = a * i;
		}
		printf("%d\n", a);
	return 0;
}



//计算1!+2!+3!+...+10!
int main()
{
	int i = 0;
	int a = 1;
	int j = 0;
	int sum = 0;
	for(j = 1;j<=10;j++)
	{
	//	a = 1;	//注意此处，a要重新设置为1，否则a为上次循环后的结果
	//for(i = 1;i<=j;i++)
	//{
	//	a = a*i; 
	//}
	a = a*j;		//此一行可直接替代上面五行，效率更高
	sum = sum+a;
	}
	printf("sum = %d\n",sum);
	return 0;
}




// 在有序的arr数组中找到数字7
int main()
{
	int arr[] = {1,2,3,4,5,6,7,8,9,10};  
	int k = 7;
	int i = 0;
	int sz = sizeof(arr)/sizeof(arr[0]);
	for(i = 0; i<sz; i++)
	{
		if(k ==arr[i])
		{
			printf("找到了，下标是： %d\n", i);
			break;		//跳出循环
		}
	}
	if (i ==sz)
		printf("找不到\n");
	return 0;
}





//二分查找法
int main()
{
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int k = 7;
	int sz = sizeof(arr)/sizeof(arr[0]);
	int left = 0;
	int right = sz-1;
	while(left<=right)
	{
		int mid = (left+right)/2;
		if(arr[mid]>k)
		{
			right = mid-1;
		}
		else if(arr[mid]<k)
		{
			left = mid+1;
		}
		else
		{
			printf("找到了，下标是： %d\n", mid);
			break;
		}
		if(left>right)
		{
			printf("找不到\n");
		}
	}
	return 0;
}



